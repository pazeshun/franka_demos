## Specify what methods are used as input vector among topics here.
## Each data must be types of either flaot or float array
topics:
  /dual_panda/joint_states:
    - 'position'
  /dual_panda/rarm_state_controller/F_ext:
    - 'wrench.force.x'
    - 'wrench.force.y'
    - 'wrench.force.z'
  /dual_panda/larm_state_controller/F_ext:
    - 'wrench.force.x'
    - 'wrench.force.y'
    - 'wrench.force.z'
  /dual_panda/dual_arm_cartesian_pose_controller/arms_target_pose:
    - 'right_target.pose.position.x'
    - 'right_target.pose.position.y'
    - 'right_target.pose.position.z'
    - 'right_target.pose.orientation.x'
    - 'right_target.pose.orientation.y'
    - 'right_target.pose.orientation.z'
    - 'right_target.pose.orientation.w'
    - 'left_target.pose.position.x'
    - 'left_target.pose.position.y'
    - 'left_target.pose.position.z'
    - 'left_target.pose.orientation.x'
    - 'left_target.pose.orientation.y'
    - 'left_target.pose.orientation.z'
    - 'left_target.pose.orientation.w'

## Specity topics used as input/output of the model
## Each element must contain [topic name, conversion_function]
## The data will be the list of [conversion_func(topic_data), ...]
input:
  - ['/dual_panda/joint_states', 'identity']
  # Uncomment below to include include force information
  # - '/dual_panda/rarm_state_controller/F_ext'
  # - '/dual_panda/larm_state_controller/F_ext'
output:
  - ['/dual_panda/joint_states', 'identity']
  # Not speficying converting function alywas means identity conversion    
  - ['/dual_panda/dual_arm_cartesian_pose_controller/arms_target_pose']
  - ['/dual_panda/joint_states', 'grippers_open']

# Action topic, TODO not used correcctly
action:
  - '/dual_panda/dual_arm_cartesian_pose_controller/arms_target_pose'
  - 'GRASP_ARRAY'  # Special types of output, this is [0/1, 0/1] array indicating [right_open, left_open] (0 means clsoed)
